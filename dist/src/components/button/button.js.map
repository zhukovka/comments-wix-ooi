{"version":3,"sources":["button.js"],"names":["Button","onClick","label","styleType","isDisabled","ariaLabel","icon","buttonStyle","btnType","btnClass","disabled","Boolean","e","propTypes","PropTypes","func","string","isRequired","oneOf","bool"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,SAAS,SAATA,MAAS,OAA2E;AAAA,QAAzEC,QAAyE,QAAzEA,OAAyE;AAAA,QAAhEC,KAAgE,QAAhEA,KAAgE;AAAA,QAAzDC,SAAyD,QAAzDA,SAAyD;AAAA,QAA9CC,UAA8C,QAA9CA,UAA8C;AAAA,QAAlCC,SAAkC,QAAlCA,SAAkC;AAAA,QAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,QAAjBC,WAAiB,QAAjBA,WAAiB;;AACpF,QAAIC,UAAUL,aAAa,IAAb,GAAoBA,SAApB,GAAgC,SAA9C;;AAEA,QAAIM,WAAW,0BAAW;AAClB;AACAC,kBAAUC,QAAQP,UAAR;AAFQ,KAAX,EAIXG,WAJW,EAKXC,OALW,CAAf;AAMA,WAEQ;AAAA;AAAA,UAAQ,UAAU,CAAlB,EAAqB,WAAWC,QAAhC;AACQ,0BAAYJ,aAAaH,KADjC;AAEQ,qBAAS,iBAACU,CAAD,EAAO;AACZ,oBAAI,CAACR,UAAL,EAAiB;AACbH,6BAAQW,CAAR;AACH;AACJ,aANT;AAOKV;AAPL,KAFR;AAaH,CAtBD;;AAwBAF,OAAOa,SAAP,GAAmB;AACfZ,aAASa,oBAAUC,IADJ;AAEfb,WAAOY,oBAAUE,MAAV,CAAiBC,UAFT;AAGfd,eAAWW,oBAAUI,KAAV,CAAgB,CAAC,SAAD,EAAY,WAAZ,EAAyB,MAAzB,CAAhB,CAHI;AAIfd,gBAAYU,oBAAUK,IAJP;AAKfd,eAAWS,oBAAUE,MALN;AAMfV,UAAMQ,oBAAUE;AAND,CAAnB;kBAQehB,M","file":"button.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nlet Button = ({onClick, label, styleType, isDisabled, ariaLabel, icon, buttonStyle}) => {\n    let btnType = styleType != null ? styleType : 'primary';\n\n    let btnClass = classNames({\n            // 'main-btn': true,\n            disabled: Boolean(isDisabled)\n        },\n        buttonStyle,\n        btnType );\n    return (\n\n            <button tabIndex={0} className={btnClass}\n                    aria-label={ariaLabel || label}\n                    onClick={(e) => {\n                        if (!isDisabled) {\n                            onClick(e);\n                        }\n                    }}>\n                {label}\n            </button>\n\n    );\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n    label: PropTypes.string.isRequired,\n    styleType: PropTypes.oneOf(['primary', 'secondary', 'text']),\n    isDisabled: PropTypes.bool,\n    ariaLabel: PropTypes.string,\n    icon: PropTypes.string\n};\nexport default Button;\n"]}