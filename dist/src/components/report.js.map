{"version":3,"sources":["report.js"],"names":["Report","props","onChange","bind","handleReportAction","myStyle","isMobile","style","styleDesk","state","selectedOption","componentDidUpdate","prevProps","prevState","snapshot","isReportError","exit","val","setState","confirmAction","render","labels","title","optionsTitle","cancel","confirm","done","responseTitle","responseMessage","reportOptions","isRequestSuccess","sectionTitle","x","mainLabel","onKeyDown","React","Component","propTypes","PropTypes","func","isRequired","bool","array","shape","string","oneOfType"],"mappings":"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","file":"report.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./style/report.scss\";\nimport styleDesk from \"./style/reportDesk.scss\";\nimport classNames from \"classnames\";\nimport Options from './options';\nimport CloseIcon from \"../svgs/close-icon\";\nimport Button from \"./button\";\n\nclass Report extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.handleReportAction = this.handleReportAction.bind(this);\n        //this.myStyle = style.locals != null ? style.locals : style;\n        this.myStyle = props.isMobile ? style : styleDesk;\n        this.state = {\n            selectedOption: null,\n        };\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.isReportError){\n            this.props.exit();\n        }\n    }\n\n    onChange(val) {\n        this.setState({selectedOption: val});\n    }\n\n    handleReportAction() {\n        let {selectedOption} = this.state;\n        if (selectedOption == null) return;\n        this.props.confirmAction(selectedOption);\n    }\n\n    render() {\n        let {labels: {title, optionsTitle, cancel, confirm, done, responseTitle, responseMessage}, exit, reportOptions, isRequestSuccess ,isMobile} = this.props;\n        let sectionTitle = isRequestSuccess ? responseTitle : title;\n        return (\n            <div className={!isRequestSuccess ? this.myStyle['container']:(this.myStyle['container']+\" \"+this.myStyle['requestSuccess'])} id=\"popup-wrapper\" tabIndex=\"-1\" role=\"dialog\">\n                <CloseIcon onClick={exit} ariaLabel={cancel} isMobile={isMobile}/>\n                <div id={\"reportTitle\"} className={classNames('page-title', this.myStyle['mainTitle'],(isMobile ? 'report_main_title':'report_main_title_desktop'))}>\n                    <span role=\"title\" aria-label={title} tabIndex=\"0\" ref={(x) => {\n                        this.mainLabel = x;\n                    }}>{sectionTitle}</span>\n                </div>\n                {isRequestSuccess ?\n                    <section>\n                        <div className={classNames(this.myStyle['messageContainer'], 'sub-title',(isMobile ? 'report_content_text' : 'report_content_text_desktop'))}>\n                            <label className=\"label\"\n                                   aria-label={responseMessage}>{responseMessage}</label>\n                        </div>\n                        <div className={this.myStyle['actionContainer']}>\n                            <Button onClick={exit} label={done} styleType={!isMobile ? (this.myStyle[\"doneButton\"]+ ' primary') : 'primary'}/>\n                        </div>\n                    </section> :\n\n                    <section>\n                        <div className={classNames('sub-title')}>\n                            <Options\n                                     isMobile={isMobile}\n                                     options={reportOptions}\n                                     onChange={this.onChange} title={optionsTitle}/>\n                        </div>\n\n                        <div className={this.myStyle['actionContainer']}>\n                            {\n                                isMobile ?\n                                    <div id={\"reportButtons\"}>\n                                        <Button onClick={this.handleReportAction} label={confirm} styleType='primary' onKeyDown={this.onKeyDown} isDisabled={this.state.selectedOption === null}/>\n                                        <Button onClick={exit} label={cancel} styleType='secondary' buttonStyle={this.myStyle['cancelButton']}/>\n                                    </div> :\n\n                                    <div id={\"reportButtons\"}>\n                                        <Button onClick={exit} label={cancel} styleType='secondary' buttonStyle={this.myStyle['cancelButton']}/>\n                                        <Button onClick={this.handleReportAction} label={confirm} styleType='primary' onKeyDown={this.onKeyDown} isDisabled={this.state.selectedOption === null}/>\n                                    </div>\n                            }\n\n                        </div>\n                    </section>\n                }\n            </div>\n        );\n    }\n}\n\nReport.propTypes = {\n    exit: PropTypes.func,\n    confirmAction: PropTypes.func.isRequired,\n    isMobile: PropTypes.bool.isRequired,\n    reportOptions: PropTypes.array.isRequired,\n    labels: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        optionsTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.array]).isRequired,\n        cancel: PropTypes.string.isRequired,\n        confirm: PropTypes.string.isRequired,\n        done: PropTypes.string.isRequired,\n        responseTitle: PropTypes.string.isRequired,\n        responseMessage: PropTypes.string.isRequired\n    })\n};\nexport default Report;\n"]}