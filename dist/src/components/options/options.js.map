{"version":3,"sources":["options.js"],"names":["Options","props","myStyle","isMobile","style","styleDesk","render","options","title","onChange","React","Component","propTypes","PropTypes","arrayOf","shape","value","oneOfType","string","number","isRequired","label","array","func","defaultValue"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,O;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAEf;AAFe,qDACf,4BAAMA,KAAN,CADe;;AAGf,cAAKC,OAAL,GAAeD,MAAME,QAAN,GAAiBC,eAAjB,GAAyBC,mBAAxC;AAHe;AAIlB;;sBAEDC,M,qBAAS;AAAA,qBACqC,KAAKL,KAD1C;AAAA,YACAM,OADA,UACAA,OADA;AAAA,YACSC,KADT,UACSA,KADT;AAAA,YACgBC,QADhB,UACgBA,QADhB;AAAA,YACyBN,QADzB,UACyBA,QADzB;;AAEL,eAAQ;AAAA;AAAA,cAAK,WAAW,KAAKD,OAAL,CAAa,mBAAb,CAAhB;AACJ;AAAA;AAAA,kBAAO,WAAW,0BAAW,KAAKA,OAAL,CAAa,cAAb,CAAX,EAAyCC,WAAW,qBAAX,GAAiC,6BAA1E,CAAlB;AACO,kCAAYK,KADnB;AAC2BA;AAD3B,aADI;AAGJ,0CAAC,sBAAD;AACc,0BAAU,KAAKP,KAAL,CAAWE,QADnC;AAEc,2BAAW,WAFzB;AAGc,yBAASI,OAHvB;AAIc,0BAAUE,QAJxB;AAHI,SAAR;AASH,K;;;EAlBiBC,gBAAMC,S;;AAqB5BX,QAAQY,SAAR,GAAoB;AAChBL,aAASM,oBAAUC,OAAV,CAAkBD,oBAAUE,KAAV,CAAgB;AACvCC,eAAOH,oBAAUI,SAAV,CAAoB,CAACJ,oBAAUK,MAAX,EAAmBL,oBAAUM,MAA7B,CAApB,EAA0DC,UAD1B;AAEvCC,eAAOR,oBAAUK,MAAV,CAAiBE;AAFe,KAAhB,CAAlB,EAGLA,UAJY;AAKhBZ,WAAOK,oBAAUI,SAAV,CAAoB,CAACJ,oBAAUS,KAAX,EAAkBT,oBAAUK,MAA5B,CAApB,EAAyDE,UALhD;AAMhBX,cAAUI,oBAAUU,IAAV,CAAeH,UANT;AAOhBI,kBAAcX,oBAAUI,SAAV,CAAoB,CAACJ,oBAAUK,MAAX,EAAmBL,oBAAUM,MAA7B,CAApB;AAPE,CAApB;kBASenB,O","file":"options.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './style.scss';\nimport styleDesk from './styleDesk.scss';\nimport RadioButtons from './radioButtons';\nimport classNames from \"classnames\";\n\nclass Options extends React.Component {\n    constructor(props) {\n        super(props);\n        //this.myStyle = style.locals != null ? style.locals : style;\n        this.myStyle = props.isMobile ? style : styleDesk;\n    }\n\n    render() {\n        let {options, title, onChange,isMobile} = this.props;\n        return (<div className={this.myStyle[\"options-container\"]}>\n            <label className={classNames(this.myStyle['optionsTitle'],(isMobile ? 'report_content_text':'report_content_text_desktop'))}\n                   aria-label={title}>{title}</label>\n            <RadioButtons\n                          isMobile={this.props.isMobile}\n                          className={'sub-title'}\n                          options={options}\n                          onChange={onChange}/>\n        </div>);\n    }\n}\n\nOptions.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        label: PropTypes.string.isRequired\n    })).isRequired,\n    title: PropTypes.oneOfType([PropTypes.array, PropTypes.string]).isRequired,\n    onChange: PropTypes.func.isRequired,\n    defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nexport default Options;\n"]}