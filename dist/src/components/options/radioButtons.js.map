{"version":3,"sources":["radioButtons.js"],"names":["RadioButtons","props","myStyle","isMobile","style","styleDesk","state","selected","defaultValue","handleOptionChange","bind","name","Math","random","toString","substring","event","value","target","tagName","id","setState","onChange","render","options","self","map","option","index","label","React","Component","propTypes","PropTypes","arrayOf","shape","oneOfType","string","number","isRequired","func"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,Y;;;AACF,0BAAYC,KAAZ,EAAmB;AAAA;;AAEf;AAFe,qDACf,4BAAMA,KAAN,CADe;;AAGf,cAAKC,OAAL,GAAeD,MAAME,QAAN,GAAiBC,eAAjB,GAAyBC,mBAAxC;AACA,cAAKC,KAAL,GAAa;AACTC,sBAAUN,MAAMO;AADP,SAAb;AAGA,cAAKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBC,IAAxB,OAA1B;AACA,cAAKC,IAAL,GAAYC,KAAKC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CAAZ;AARe;AASlB;;2BAGDN,kB,+BAAmBO,K,EAAO;AACtB,YAAIC,QAAQD,MAAME,MAAN,CAAaD,KAAzB;AACA,YAAGD,MAAME,MAAN,CAAaC,OAAb,KAAuB,OAAvB,IAAkCH,MAAME,MAAN,CAAaC,OAAb,KAAuB,KAA5D,EAAkE;AAC9DF,oBAAQD,MAAME,MAAN,CAAaE,EAArB;AACH;AACD,aAAKC,QAAL,CAAc;AACVd,sBAAUU;AADA,SAAd;AAGA,aAAKhB,KAAL,CAAWqB,QAAX,CAAoBL,KAApB;AACH,K;;2BAEDM,M,qBAAS;AAAA,qBACoB,KAAKtB,KADzB;AAAA,YACAuB,OADA,UACAA,OADA;AAAA,YACQrB,QADR,UACQA,QADR;;AAEL,YAAIsB,OAAO,IAAX;AACA,eAAQ;AAAA;AAAA,cAAK,IAAI,aAAT,EAAwB,MAAM,MAA9B,EAAsC,mBAAiB,QAAvD,EAAiE,UAAU,CAAC,CAA5E;AAGAD,oBAAQE,GAAR,CAAY,UAAUC,MAAV,EAAkBC,KAAlB,EAAyB;AACjC,uBAAQ;AAAA;AAAA,sBAAK,IAAID,OAAOV,KAAhB,EAAuB,SAASQ,KAAKhB,kBAArC,EAAyD,cAAY,WAASkB,OAAOE,KAArF,EAA4F,UAAU,CAAtG,EAAyG,MAAM,UAA/G,EAA2H,KAAKD,KAAhI,EAAuI,WAAWH,KAAKvB,OAAL,CAAa,QAAb,KAAyBC,WAAW,sBAAX,GAAkC,8BAA3D,CAAlJ;AACA,6DAAO,MAAK,OAAZ,EAAoB,MAAM,aAA1B,EAAyC,OAAOwB,OAAOV,KAAvD;AACO,iCAASQ,KAAKnB,KAAL,CAAWC,QAAX,IAAuBoB,OAAOV,KAD9C,EACqD,UAAUQ,KAAKhB,kBADpE,GADA;AAG0B;AAAA;AAAA,0BAAO,IAAIkB,OAAOV,KAAlB,EAAyB,SAASQ,KAAKhB,kBAAvC;AAA4DkB,+BAAOE;AAAnE;AAH1B,iBAAR;AAMH,aAPD;AAHA,SAAR;AAaH,K;;;EAxCsBC,gBAAMC,S;;AA2CjC/B,aAAagC,SAAb,GAAyB;AACrBR,aAASS,oBAAUC,OAAV,CAAkBD,oBAAUE,KAAV,CAAgB;AACvClB,eAAOgB,oBAAUG,SAAV,CAAoB,CAACH,oBAAUI,MAAX,EAAmBJ,oBAAUK,MAA7B,CAApB,EAA0DC,UAD1B;AAEvCV,eAAOI,oBAAUI,MAAV,CAAiBE;AAFe,KAAhB,CAAlB,EAGLA,UAJiB;AAKrBjB,cAAUW,oBAAUO,IAAV,CAAeD,UALJ;AAMrB/B,kBAAcyB,oBAAUG,SAAV,CAAoB,CAACH,oBAAUI,MAAX,EAAmBJ,oBAAUK,MAA7B,CAApB;AANO,CAAzB;kBAQetC,Y","file":"radioButtons.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './style.scss';\nimport styleDesk from './styleDesk.scss';\n\nclass RadioButtons extends React.Component {\n    constructor(props) {\n        super(props);\n        //this.myStyle = style.locals != null ? style.locals : style;\n        this.myStyle = props.isMobile ? style : styleDesk;\n        this.state = {\n            selected: props.defaultValue\n        };\n        this.handleOptionChange = this.handleOptionChange.bind(this);\n        this.name = Math.random().toString(36).substring(7);\n    }\n\n\n    handleOptionChange(event) {\n        let value = event.target.value;\n        if(event.target.tagName===\"LABEL\" || event.target.tagName===\"DIV\"){\n            value = event.target.id;\n        }\n        this.setState({\n            selected: value\n        });\n        this.props.onChange(value);\n    }\n\n    render() {\n        let {options,isMobile} = this.props;\n        let self = this;\n        return (<div id={\"reportModal\"} role={\"menu\"} aria-labelledby={\"report\"} tabIndex={-1}>\n            {\n\n                options.map(function (option, index) {\n                    return (<div id={option.value} onClick={self.handleOptionChange} aria-label={\"radio \"+option.label} tabIndex={0} role={\"menuitem\"} key={index} className={self.myStyle[\"option\"] +(isMobile ? ' report_content_text':' report_content_text_desktop')}>\n                            <input type=\"radio\" name={\"radio group\"} value={option.value}\n                                   checked={self.state.selected == option.value} onChange={self.handleOptionChange}/>\n                                                      <label id={option.value} onClick={self.handleOptionChange}>{option.label}</label>\n                    </div>\n                    );\n                })\n            }\n        </div>);\n    }\n}\n\nRadioButtons.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        label: PropTypes.string.isRequired\n    })).isRequired,\n    onChange: PropTypes.func.isRequired,\n    defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nexport default RadioButtons;\n"]}